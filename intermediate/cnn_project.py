# -*- coding: utf-8 -*-
"""CNN_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F_yp_Fek-mJJMhqXELDK3e-IKt5fo7so
"""

#import necessary library
import keras
from tensorflow.keras.datasets import mnist
from tensorflow.keras.layers import Dense, Dropout
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten
from tensorflow.keras.models import Sequential 
from tensorflow.keras import backend
from tensorflow.keras.utils import to_categorical
from tensorflow.keras.losses import categorical_crossentropy
from tensorflow.keras.optimizers import Adam, Adadelta

#making dataset
(x_train, y_train),(x_test,y_test) = mnist.load_data()

x_train = x_train.reshape(x_train.shape[0], 28, 28, 1)
x_test = x_test.reshape(x_test.shape[0], 28, 28, 1)
input_shape = (28, 28, 1)



y_train = to_categorical(y_train, 10)
y_test = to_categorical(y_test, 10)

x_train = x_train.astype('float32')
x_test = x_test.astype('float32')
x_train /= 255
x_test /= 255

x_train[0]

#making the model
 batch_size = 128
 num_classes = 10
 epochs = 10

 model = Sequential()
 model.add(Conv2D(32, (3,3), activation = 'relu', input_shape = input_shape))
 model.add(Conv2D(64, (3,3), activation = 'relu'))
 model.add(MaxPooling2D(pool_size = (2,2)))
 model.add(Dropout(0.25))
 model.add(Flatten())
 model.add(Dense(256, activation = 'relu'))
 model.add(Dropout(0.5))
 model.add(Dense(10, activation = 'softmax'))
 model.compile(loss=categorical_crossentropy,optimizer=Adadelta(),metrics=['accuracy'])

hist = model.fit(x_train, y_train, batch_size = batch_size, epochs = epochs, verbose = 1, validation_data = (x_test, y_test))

model.save('mnist.h5')

#evaluate the model
model.evaluate(x_test, y_test, verbose = 0)

#the prediciton of model for x_test[0]
predict=model.predict(x_test[:1])

predict



